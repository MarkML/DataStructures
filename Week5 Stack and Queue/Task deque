#include <iostream>
#include <deque>
#include <string>

using namespace std;

class TaskScheduler {
private:
    deque<string> tasks; // Deque to store tasks

public:
    // Add a new task to the end of the scheduler
    void addTask(const string& task) {
        tasks.push_back(task);
        cout << "Task \"" << task << "\" added." << endl;
    }

    // Mark the oldest task as completed and remove it from the scheduler
    void completeTask() {
        if (!tasks.empty()) {
            cout << "Completed task: \"" << tasks.front() << "\"" << endl;
            tasks.pop_front();
        } else {
            cout << "No tasks to complete." << endl;
        }
    }

    // Display all tasks currently in the scheduler
    void displayTasks() {
        cout << "Current tasks:" << endl;
        for (const auto& task : tasks) {
            cout << "- " << task << endl;
        }
    }
};

int main() {
    TaskScheduler scheduler;
    int choice;

    cout << "Task Scheduler" << endl;

    do {
        cout << "\n1. Add Task\n2. Complete Task\n3. Display Tasks\n4. Exit\n\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                string task;
                cout << "Enter task description: ";
                cin.ignore();
                getline(cin, task);
                scheduler.addTask(task);
                break;
            }
            case 2:
                scheduler.completeTask();
                break;
            case 3:
                scheduler.displayTasks();
                break;
            case 4:
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice. Please enter a number from 1 to 4." << endl;
        }
    } while (choice != 4);

    return 0;
}

