#include <iostream>
#include <unordered_set>
#include <string>

using namespace std;

int main() {
    // Define an unordered set to store unique usernames
    unordered_set<string> usernames;

    // Define a pair to store the result of the insertion operation
    pair<unordered_set<string>::iterator, bool> insertionResult;

    // Prompt the user to enter usernames until they enter "done"
    cout << "Enter usernames (type 'done' to finish):\n";
    string username;
    while (true) {
        cout << "> ";
        cin >> username;

        // Check if the user wants to exit
        if (username == "done") {
            break;
        }

        // Check if the username already exists in the set
        if (usernames.find(username) != usernames.end()) {
            cout << "Username \"" << username << "\" already exists.\n";
            continue; // Skip the insertion and prompt for the next username
        }

        // Attempt to insert the username into the unordered set
        insertionResult = usernames.insert(username);

        // Provide feedback to the user based on insertion result
        if (insertionResult.second) {
            cout << "Username \"" << username << "\" added successfully.\n";
        } else {
            cout << "Failed to add username \"" << username << "\".\n";
        }
    }

    // Display the unique usernames entered by the user
    cout << "\nUnique usernames entered:\n";
    for (const string& name : usernames) {
        cout << name << endl;
    }

    // Prompt the user to enter a username to delete
    cout << "\nEnter a username to delete:\n";
    cout << "> ";
    cin >> username;

    // Check if the username exists in the set
    if (usernames.find(username) != usernames.end()) {
        // Erase the username from the set
        size_t erasedCount = usernames.erase(username);
        cout << "Username \"" << username << "\" deleted successfully. " << erasedCount << " occurrence(s) removed.\n";

        // Display the updated list of usernames
        cout << "\nUpdated list of usernames:\n";
        for (const string& name : usernames) {
            cout << name << endl;
        }
    } else {
        cout << "Username \"" << username << "\" not found.\n";
    }

    return 0;
}

