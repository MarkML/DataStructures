#include <iostream>
#include <fstream> // For file input/output
#include <unordered_map>
#include <string>
#include <sstream>
#include <cctype> // for std::tolower

using namespace std;

// Function to remove punctuation marks from a word
string removePunctuation(const string& word) {
    string result;
    for (char c : word) {
        if (isalpha(c) || c == '\'') { // Keep alphabets and single quotes
            result += tolower(c); // Convert to lowercase
        }
    }
    return result;
}

int main() {
    ifstream file("example.txt"); // Open the file "example.txt" for reading
    if (!file) {
        cerr << "Error: Unable to open file." << endl;
        return 1;
    }

    unordered_map<string, int> wordFrequency;

    string line;
    while (getline(file, line)) { // Read the file line by line
        stringstream ss(line); // Create a stringstream from the current line
        string word;
        while (ss >> word) { // Extract words from the stringstream
            string cleanWord = removePunctuation(word); // Remove punctuation from the word
            if (!cleanWord.empty()) { // Check if the cleaned word is not empty
                wordFrequency[cleanWord]++; // Increment the frequency of the cleaned word
            }
        }
    }

    file.close(); // Close the file

    // Display word frequencies
    cout << "Word Frequency:\n";
    for (const auto& pair : wordFrequency) {
        // 'auto' keyword automatically deduces the type of 'pair' as a pair of string and int
        cout << pair.first << ": " << pair.second << endl;
    }

    return 0;
}
